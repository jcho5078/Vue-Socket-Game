version: "1"
services:
  db:
    image: mariadb:10
    container_name: mysql
    ports:
      - 3306:3306
    environment:
      TZ: Asia/Seoul
      MYSQL_HOST: localhost
      MYSQL_PORT: 3306
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: test
      MYSQL_USER: user
      MYSQL_PASSWORD: 1234
    volumes:
      - ./backApi/db/conf.d:/etc/mysql/conf.d
      - ./backApi/db/mariadb/conf.d:/etc/mysql/mariadb.conf.d
      - ./backApi/db/data:/var/lib/mysql
      - ./backApi/db/initdb.d:/docker-entrypoint-initdb.d
    env_file: ./backApi/db/initdb.d/.env
    command: ['--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
    networks:
      - net
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - "2181:2181"
    networks:
      - net
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
    networks:
      - net
  kafdrop:
    depends_on:
      - kafka
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    environment:
      KAFKA_BROKER_CONNECT: "kafka:29092"
  back:
    depends_on:
      - db
    build:
      context: .
      dockerfile: ./backApi/Dockerfile
    container_name: api
    ports:
      - 8080:8080
    environment:
      SPRING_DATASOURCE_URL: jdbc:mariadb://db:3306/test?useUnicode=yes&characterEncoding=UTF-8&useSSL=false
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: 1234
      SPRING_HIBERNATE_DDL: create-drop
    networks:
      - net
  front:
    depends_on:
      - back
    ports:
      - 80:80
    build:
      dockerfile: ./front_vue/Dockerfile
    expose:
      - 80
    volumes:
      - "./front_vue/nginx/nginx.conf:/etc/nginx/conf.d/default.conf"
    networks:
      - net
  socket: # 미완성
    depends_on:
      - db
    ports:
      - 3000:3000
    build: ./socket_server
    restart: unless-stopped
    networks:
      - net
networks:
  net:
    driver: bridge